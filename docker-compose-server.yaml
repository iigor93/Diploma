version: "3.9"
services:
  front:
    image: sermalenk/skypro-front:lesson-38 # sermalenk/skypro-front:lesson-37 #sermalenk/skypro-front:lesson-36
    #image: iigor93/course7:front_end
    #build:
      #context: ./f_end
    ports:
    - "80:80"    
    depends_on:
      - api

  
  tg_bot:
    #build:
      #context: .
    image: iigor93/course7:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    ports:
    - "8080:8000" 
    depends_on:
      postgres_db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
    #  - ./todolist:/code/todolist
      - ./env_folder:/code/todolist/todolist/env_folder
    command: ./manage.py runbot


  api:
    #build:
      #context: .
    image: iigor93/course7:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    ports:
    - "8000:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
    #  - ./todolist:/code/todolist
      - ./env_folder:/code/todolist/todolist/env_folder
        
  migrations:
    #build:
      #context: .
    image: iigor93/course7:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres_db:
        condition: service_healthy
    command: ./manage.py migrate
    volumes:
    #  - ./todolist:/code/todolist
      - ./env_folder:/code/todolist/todolist/env_folder
     
  postgres_db:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_PASSWORD:  $DB_PASSWORD  
      POSTGRES_DB:  $DB_NAME 
      POSTGRES_USER:  $DB_USER
    restart: always
    ports:
    - "5431:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
